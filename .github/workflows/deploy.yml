name: Deploy PartyCrusher Bot

on:
  push:
    branches:
      - dev
      - qa
      - main

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      # 1. Checkout Repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Docker
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3. Set environment based on branch
      - name: Set Environment Name
        shell: powershell
        run: |
          if ($env:GITHUB_REF -eq "refs/heads/dev") {
            "ENV=dev" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
            "TAG=dev" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          }
          elseif ($env:GITHUB_REF -eq "refs/heads/qa") {
            "ENV=qa" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
            "TAG=qa" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          }
          elseif ($env:GITHUB_REF -eq "refs/heads/main") {
            "ENV=prod" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
            "TAG=latest" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          }
          else {
            Write-Error "Unknown branch: $env:GITHUB_REF"
            exit 1
          }

      # 4. Build & push image
      - name: Build & Push Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository }}:${{ env.env }} .
          docker push ghcr.io/${{ github.repository }}:${{ env.env }}

      # 5. Deploy container
      - name: Deploy Container
        run: |
          docker compose --profile ${{ env.env }} down || true
          docker compose --profile ${{ env.env }} up -d --pull always --build
